name: plan

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "stage", "main" ]
    paths-ignore: [ "docs/**" ]

concurrency:
  group: {% raw %}${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

jobs:          
  build-and-plan-stage:
    environment: stage
    runs-on: ubuntu-latest
    if: {% raw %}${{ github.event.pull_request.base.ref == 'stage' }}{% endraw %}
    steps:

      - name: checkout code repository
        uses: actions/checkout@v3

      - name: build the stack
        run:  docker-compose -f app/compose.yml up -d --build

      - name: tear down the stack
        run:  docker-compose -f app/compose.yml down

      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: {% raw %}${{ secrets.SSH_KEY }}{% endraw %}
          name: id_rsa # optional
          known_hosts: unnecessary
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: add known hosts
        run: ssh-keyscan -H {% raw %}${{ secrets.DROPLET_HOST }}{% endraw %} >> ~/.ssh/known_hosts
          
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.2
          cli_config_credentials_token: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}

      - name: initialize terraform
        run: |
          make init-stage TF_FLAGS="-input=false"
          
      - name: plan terraform
        id: plan
        continue-on-error: true
        run: |
          make plan-stage TF_FLAGS="-input=false -no-color"

      - name: post plan to github PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ```diff
            {% raw %}${{ steps.plan.outputs.stdout }}{% endraw %}
            ```

      - name: fail if plan fails
        if: steps.plan.outcome == 'failure'
        run: exit 1

  build-and-plan-prod:
    environment: prod
    runs-on: ubuntu-latest
    if: {% raw %}${{ github.event.pull_request.base.ref == 'main' }}{% endraw %}
    steps:

      - name: checkout code repository
        uses: actions/checkout@v3

      - name: build the stack
        run:  docker-compose -f app/compose.yml up -d --build

      - name: tear down the stack
        run:  docker-compose -f app/compose.yml down

      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: {% raw %}${{ secrets.SSH_KEY }}{% endraw %}
          name: id_rsa # optional
          known_hosts: unnecessary
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: add known hosts
        run: ssh-keyscan -H {% raw %}${{ secrets.DROPLET_HOST }}{% endraw %} >> ~/.ssh/known_hosts

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.2
          cli_config_credentials_token: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}

      - name: initialize terraform
        run: |
          make init-prod TF_FLAGS="-input=false"

      - name: plan terraform
        id: plan
        continue-on-error: true
        run: |
          make plan-prod TF_FLAGS="-input=false -no-color"

      - name: post plan to github PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ```diff
            {% raw %}${{ steps.plan.outputs.stdout }}{% endraw %}
            ```

      - name: fail if plan fails
        if: steps.plan.outcome == 'failure'
        run: exit 1   
